#!/usr/bin/env bash
# A shortcut function that simplifies usage of xclip. (or pbcopy on Mac)
# - Accepts input from either stdin (pipe), or a parameter.
# ----------------------------------------------------------
_scs_col="\033[0;32m"; _wrn_col='\033[1;31m'; _trn_col='\033[0;33m'

if [[ "$(uname)" == 'Darwin' ]]; then
  CLIPBOARD_CMD="pbcopy"
else
  # Check that xclip is installed.
  if ! type xclip > /dev/null 2>&1; then
    echo -e "$_wrn_col""You must have the 'xclip' program installed.\033[0m"
  fi
  CLIPBOARD_CMD="xclip"
fi

# Check user is not root (root doesn't have access to user xorg server)
if [[ "$USER" == "root" ]]; then
  echo -e "$_wrn_col""Must be regular user (not root) to copy a file to the clipboard.\033[0m"
  exit 1
fi

# If no tty, data should be available on stdin
if ! [[ "$( tty )" == /dev/* ]]; then
  input="$(< /dev/stdin)"
# Else, fetch input from params
else
  input="$*"
fi
if [ -z "$input" ]; then  # If no input, print usage message.
  echo "Copies a string to the clipboard."
  echo "Usage: cb <string>"
  echo "       echo <string> | cb"
else
  # Copy input to clipboard
  echo -n "$input" | $CLIPBOARD_CMD -selection c
  # Truncate text for status
  if [ ${#input} -gt 80 ]; then input="$(echo $input | cut -c1-80)$_trn_col...\033[0m"; fi
  # Print status.
  echo -e "$_scs_col""Copied to clipboard:\033[0m $input"
fi
