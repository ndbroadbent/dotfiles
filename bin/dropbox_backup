#!/bin/bash
set -eo pipefail

if ! [ -d "$HOME/Dropbox" ]; then
  echo "Could not find Dropbox folder at $HOME/Dropbox. Please set up Dropbox first."
  exit 1
fi

if ! which openssl > /dev/null 2>&1; then
  echo "openssl is required! Please install packages first."
  exit 1
fi

function usage() {
  cat <<HELP >&2
Usage: $0
  -d <directory> Run for a specific directory (ssh, convox, etc.)
  -s Encrypt and save ~/.{ssh,convox} to Dropbox
  -r Decrypt and restore ~/.{ssh,convox} from Dropbox
HELP
}

if [ -z "$1" ]; then
  usage
  exit 1
fi

DROPBOX_FOLDER="$HOME/Dropbox/Config"

function save_files() {
  mkdir -p "$DROPBOX_FOLDER"
  CONFIG_DIR="$1"
  CONFIG_PATH="$HOME/.$CONFIG_DIR"
  if ! [ -d "$CONFIG_PATH" ]; then return; fi
  ENCRYPTED_FILES_PATH="$DROPBOX_FOLDER/$CONFIG_DIR.tar.gz.encrypted"
  echo "=> Encrypting $CONFIG_PATH and saving to ${ENCRYPTED_FILES_PATH}..."
  cd "$CONFIG_PATH"
  tar cz * | openssl enc -aes-256-cbc -e > "${ENCRYPTED_FILES_PATH}"
}

function restore_files() {
  CONFIG_DIR="$1"
  ENCRYPTED_FILES_PATH="$DROPBOX_FOLDER/$CONFIG_DIR.tar.gz.encrypted"
  if ! [ -f "$ENCRYPTED_FILES_PATH" ]; then
    echo "Could not find encrypted files at ${ENCRYPTED_FILES_PATH}"
    return
  fi

  echo "=> Decrypting and extracting ~/.$CONFIG_DIR from ${ENCRYPTED_FILES_PATH}..."
  openssl aes-256-cbc -d -in "${ENCRYPTED_FILES_PATH}" -out /tmp/$CONFIG_DIR.tar.gz
  rm -rf "$HOME/.$CONFIG_DIR"
  mkdir -p "$HOME/.$CONFIG_DIR"
  cd "$HOME/.$CONFIG_DIR"
  tar xvf /tmp/$CONFIG_DIR.tar.gz
  rm -rf /tmp/$CONFIG_DIR.tar.gz
}

function set_default_dirs() {
  if [ -z "$CONFIG_DIRS" ]; then
    #CONFIG_DIRS="ssh convox"
    CONFIG_DIRS="ssh convox"
  fi
}

while getopts "d:srh" opt; do
  case "$opt" in
  d)
    CONFIG_DIRS="$OPTARG";;
  s)
    set_default_dirs
    for DIR in $CONFIG_DIRS; do
      save_files "$DIR"
    done;;
  r)
    set_default_dirs
    for DIR in $CONFIG_DIRS; do
      restore_files "$DIR"
    done;;
  h)
    usage
    exit;;
  *)
    echo "Unknown option: -$opt" >&2
    return 1;;
  esac
done
shift $((OPTIND -1))
